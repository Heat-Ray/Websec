Red Blob Games
  from Amit Patelredblobgames@gmail.com@redblobgamesblogRSSHi! I make interactive visual explanations of math and algorithms, using motivating examples from computer games.LearnIntroduction to A* and implementation guideTower Defense pathfinding and implementation guide Hexagonal grid reference and implementation guide 2D Visibility algorithm Intro to graph theory Probability for RPG Damage Line drawing Curved roads Map generation from noise and noise function conceptsPolygonal Map Generation[1] Pathfinding with A*[2]Grid edges and tiles Grid math: Square, Hexagon, Triangle[3] Pathfinding with circular obstacles[4] Guide to Delaunator[5], a Delaunay+Voronoi library Noisy edges out of straight lines[6]I’ve been curating game development articles since 1990[7], and my web site has been up since 1995. All of my articles are available for free, with no signup and no ads. The main audience is independent, student, and hobbyist software developers. I started experimenting with interactive explanations in 2004, but didn’t figure out until 2007   the style of interactive explanation I use now[8].PlayI make fun demos while learning new things and writing explanations: Mapgen4 map generator lets you draw your own terrain Procedural face generator (inspired by a Scott McCloud book) Mapgen2 map generator Ellipse from lines (inspired by a 3blue1brown video) Modulo multiplication (inspired by a Mathologer video) Orbits of planets (inspired by a John Carlos Baez blog post) Noisy edges using shaders Car blind spots[9] Bacterial cell animation Conveyor belt editor (inspired by Factorio) Organic cave maps Tiling a sphere with squares (or hexagons) Tiling a cube with squaresPonderI also explore ideas sometimes without writing a full tutorial:Alternative to Voronoi with rounder cellsProcedurally generating names using pronunciations and neural networksProcedurally modifying spelling using pronunciations and letter-phoneme alignmentUnderstanding the color yellow: why are there three primary colors in science but four primary colors in board games, crayons, etc.?Distance to seed points using Breadth First SearchHomunculus: stretching and shrinking maps to match a game’s needs[10]Map generation with no code, only image filtersTerrain shader experiments for filling triangles with various patternsPlacing natural resources on a mapHexagon on Saturn[11]: can I recreate it?Procedural planet generation on a sphere using Voronoi+DelaunayReshaping distributions[12]MetaI’m working on a series of pages that explain how to make interactive tutorials:Interactive tutorial about making interactive tutorials, including multiple diagrams, layered diagrams, drag-and-drop, and scrubbable numbersDrag handles with constraintsArrows outside the diagrams[13], something I haven’t seen elsewhere, and haven’t used yetResponsive web design implementation for interactive diagrams (canvas, svg, webgl)Notes on how I made the A* pages and the tool I made for graph editingBlog posts[14] about my process and strugglesScrubbable numbers in ObservableHQ[15]Using Vue’s reactivity system with Canvas[16], which can also work with D3[17]. I’m also experimenting with Hyperactiv’s reactivity system for interactive diagrams.Accompanying code is open source, under either the MIT License[18] or the Apache v2 License[19]. Both allow use in commercial projects. Other projects are found at at github/amitp[20] and github/redblobgames[21].About meI’ve been helping people make games since 1990. I wrote games earlier in life, with Solar Realms Elite[22] being the most well known[23], then worked on an environmental simulation game called BlobCity, then took a break for over a decade. The recent rise of indie, mobile, tablet, social, and web games have made me interested in game development again. My current passion is using interactivity on the web for learning, especially computer science and math. I’ve started with game development because it’s a rich source of interesting problems that can be explained visually. With modern web browsers, we can use explanations that don’t follow the formats used in magazines, technical papers, and books. We can combine learning by reading, learning by watching, and learning by doing[24].I previously worked with Root-1[25] on educational games, Wild Shadow Studios on Realm of the Mad God[26], Peter Norvig on interactive diagrams for Artifical Intelligence: A Modern Approach[27], and Nonagon Games on A Chronicle of Misdeeds[28].In addition to helping game developers with my articles, I love to talk to people working with games and interactive education. Mostly it’s informal chats over lunch, but occasionally I’ll work with someone for a longer period of time. If you’re developing games in the Palo Alto / San Jose area and want to chat in person, email me at redblobgames@gmail.com. I’m especially interested in game algorithms related to maps, procedural generation, and pathfinding, but love to chat about anything.
		 Copyright © 2019
Red Blob GamesRSS Feed
	  